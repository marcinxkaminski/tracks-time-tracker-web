{"version":3,"sources":["static/images/logo.svg","constants/RoutePaths.js","utils/Service.js","utils/TimeConverter.js","utils/DataManager.js","components/common/FormButton.jsx","components/Entry/Login/LoginForm.jsx","containers/Entry/Login.jsx","components/Entry/Register/RegisterForm.jsx","containers/Entry/Register.jsx","components/Entry/Reminder/ReminderForm.jsx","containers/Entry/Reminder.jsx","containers/Entry/Entry.jsx","components/Dashboard/FooterNavigation.jsx","components/Dashboard/Footer.jsx","components/Dashboard/Header.jsx","components/Dashboard/Overview/Calendar.jsx","components/Dashboard/Overview/Settings.jsx","components/Dashboard/Overview/OverviewDetails.jsx","components/Dashboard/Projects/ProjectTile.jsx","components/Dashboard/Tasks/TaskTile.jsx","containers/Dashboard/Overview/Overview.jsx","containers/Dashboard/Projects/Projects.jsx","components/Dashboard/Projects/ProjectDetails.jsx","components/common/Share.jsx","constants/Project.js","containers/Dashboard/Projects/Project.jsx","components/common/DatePicker.jsx","components/Dashboard/Projects/AddProjectForm.jsx","containers/Dashboard/Projects/AddProject.jsx","components/Dashboard/Projects/EditProjectForm.jsx","containers/Dashboard/Projects/EditProject.jsx","containers/Dashboard/Tasks/Tasks.jsx","components/Dashboard/Tasks/TaskDetails.jsx","components/common/TimingButton.jsx","components/Dashboard/Tasks/TaskTiming.jsx","constants/Task.js","containers/Dashboard/Tasks/Task.jsx","components/Dashboard/Tasks/AddTaskForm.jsx","containers/Dashboard/Tasks/AddTask.jsx","components/Dashboard/Tasks/EditTaskForm.jsx","containers/Dashboard/Tasks/EditTask.jsx","containers/Dashboard/Dashboard.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","RoutePaths","ENTRY","LOGIN","REGISTER","REMINDER","DASHBOARD","SETTINGS","OVERVIEW","OVERVIEW_DATE","PROJECTS","PROJECT_ADD","PROJECT","PROJECT_EDIT","PROJECT_REMOVE","TASKS","TASK_ADD","TASK","TASK_EDIT","TASK_REMOVE","url","getOptions","method","data","credentials","headers","body","JSON","stringify","_method","Service","logout","localStorage","removeItem","fetch","login","callback","failureCallback","email","then","res","json","getData","catch","err","console","error","message","register","remind","projects","fetchedData","setItem","editUser","id","deleteUser","getProjects","getProject","getProjectSummary","addProject","editProject","removeProject","getTasks","getTask","getTaskSummary","addTask","editTask","removeTask","startCounting","stopCounting","shareTask","task","shareProject","project","addZero","time","TimeConverter","createDate","year","month","day","getTodaysDate","d","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getTodaysDateWithoutTime","date","getCurrentTime","getTime","getTimeDifferenceInSeconds","Math","ceil","getSecondsPart","floor","getMinutesPart","getHoursPart","getDatePart","dateAndtime","split","getYearPart","this","Number","getMonthPart","getDayPart","getMoneyEarned","price","isBetweenDates","from","to","DataManager","removeData","tracks","parse","setData","removeUser","getUserDetails","setUserDetails","getEarningsAndTimeSpentForProject","earned","timeSpent","i","tasks","length","j","working","start","pricePerHour","getDailyOverview","result","addedTask","k","push","dailyForProject","getMaxProjectID","splice","maxId","getProjectName","name","map","undefined","getMaxTasksID","projectId","startWorking","log","addWorkingLog","saveTmpWorkingLog","timeToSave","getTmpWorkingLog","timeDifference","getItem","FormButton","needValidation","valid","Object","entries","forEach","val","validateFields","props","buttonProps","type","Component","LoginForm","onSubmit","state","password","onChange","bind","e","setState","target","value","className","preventDefault","field","placeholder","required","Login","isLoading","displayError","shouldRedirect","Redirect","Link","RegisterForm","surname","phone","defaultPricePerHour","Register","registred","success","data-dismiss","aria-label","ReminderForm","Reminder","reminded","Entry","src","logo","alt","Route","exact","path","component","FooterNav","active","icon","faTachometerAlt","faClipboardList","faTasks","Footer","Header","icons","settings","edit","remove","add","calendar","share","back","functions","goBack","key","onClick","elementsLeft","item","createListElement","elementsRight","Calendar","dateRange","rangeType","currentState","_maxDayFrom","_getDaysInMonth","_mapStateToDate","close","min","max","_maxYearFrom","defaultValue","pattern","_maxMonthFrom","_minYearTo","_minMonthTo","_minDayTo","Settings","OverviewDetails","ProjectTile","show","TaskTile","isActive","Overview","toggleModal","modalType","prevState","modalCalendarOpened","modalSettingsOpened","updateOverview","daily","onSettingsClick","onSettingsSubmit","onCalendarClick","onCalendarSubmit","newDateRange","onTaskTileClick","history","replace","onProjectTileClick","Projects","onTileClick","onEditClick","onRemoveClick","onAddClick","ProjectDetails","for","Share","InitialProject","userDetails","Project","toggleShare","match","location","matchPath","pathname","strict","params","isShareModalOpen","_shouldRedirect","DatePicker","currentYear","currentMonth","currentDay","AddProjectForm","_onDateChange","deadline","newDeadline","description","AddProject","priceperHour","EditProject","Tasks","TaskDetails","projectName","TimingButton","running","TaskTiming","timeDiff","timer","startTimer","countUp","stopTimer","_onClick","setInterval","clearInterval","InitialTask","Task","AddForm","changeHourlyPrice","disabled","hidden","AddTask","EditForm","fields","EditTask","Dashboard","pathSplittedOnSlash","isInMainDashboard","includes","activeTab","App","isLoggedIn","loggedIn","withRouter","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b7f15d53.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ade1deab.svg\";","export const RoutePaths = {\n    // Entry\n    ENTRY: '/app',\n    LOGIN: '/app/login',\n    REGISTER: '/app/register',\n    REMINDER: '/app/reminder',\n\n    // Dashboard\n    DASHBOARD: '/dashboard',\n    SETTINGS: '/dashboard/settings',\n\n    // Dashboard Overview\n    OVERVIEW: '/dashboard/overview',\n    OVERVIEW_DATE: '/dashboard/overview/:date',\n\n    // Dashboard Projects\n    PROJECTS: '/dashboard/projects',\n    PROJECT_ADD: '/dashboard/projects/new/add',\n    PROJECT: '/dashboard/projects/:id',\n    PROJECT_EDIT: '/dashboard/projects/:id/edit',\n    PROJECT_REMOVE: '/dashboard/projects/:id',\n\n    // Dashboard Tasks\n    TASKS: '/dashboard/tasks',\n    TASK_ADD: '/dashboard/tasks/new/add',\n    TASK: '/dashboard/tasks/:id',\n    TASK_EDIT: '/dashboard/tasks/:id/edit',\n    TASK_REMOVE: '/dashboard/tasks/:id/remove',\n}","const url = 'http://student.agh.edu.pl/~mpitura/Tracks';\n\nfunction getOptions(method, data) {\n    const dataToSend = method === 'GET' ? null : JSON.stringify({ ...data, _method: method });\n    const options = {\n        method: method,\n        credentials: 'include',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: dataToSend\n    }\n    return options;\n}\n\nexport const Service = {\n    // USER\n    logout() {\n        localStorage.removeItem('tracks');\n        fetch(url + '/logout', getOptions('POST'));\n    },\n\n    login(data, callback, failureCallback) {\n        data = { email: data.email };\n        fetch(url + '/login', getOptions('POST', data)).then((res) => {\n            return res.json();\n        }).then(res => {\n            this.getData();\n            if (callback) { callback(res) };\n        }).catch(err => {\n            console.error(err.message);\n            if (failureCallback) { failureCallback(); }\n        });\n    },\n\n    register(data, callback) {\n        fetch(url + '/users', getOptions('POST', data)).then((res) => {\n            return res.json();\n        }).then(res => {\n            if (callback) { callback(res) };\n        }).catch(err => {\n            console.error(err.message);\n        });\n    },\n\n    remind(data, callback) {\n        fetch(url + '/remind', getOptions('POST', data)).then((res) => {\n            return res.json();\n        }).then(res => {\n            if (callback) { callback(res) };\n        }).catch(err => {\n            console.error(err.message);\n        });\n    },\n\n    getData: function (callback) {\n        fetch((url + '/user'), getOptions('GET')).then((res) => {\n            return res.json();\n        }).then(res => {\n            if (res && !res.message && res.projects) {\n                const fetchedData = JSON.stringify(res);\n                localStorage.setItem('tracks', fetchedData);\n                if (callback) { callback(res) };\n            } else if (res.message) {\n                console.error(res.message);\n            }\n        }).catch(err => {\n            console.error(err.message);\n        });\n    },\n\n    editUser: function (data, callback) {\n        fetch(url + '/users/' + data.id, getOptions('PUT', data)).then((res) => {\n            return res.json();\n        }).then(res => {\n            this.getData();\n            if (callback) { callback(res) };\n        }).catch(err => {\n            console.error(err.message);\n        });\n    },\n\n    deleteUser: function (data, callback) {\n        fetch(url + '/users/' + data.id, getOptions('PUT', data)).then((res) => {\n            return res.json();\n        }).then(res => {\n            this.getData();\n            if (callback) { callback(res) };\n        }).catch(err => {\n            console.error(err.message);\n        });\n    },\n\n    // PROJECTS\n    getProjects: function (callback) {\n        fetch(url + '/projects', getOptions('GET')).then((res) => {\n            return res.json();\n        }).then(res => {\n            this.getData();\n            if (callback) { callback(res) };\n        }).catch(err => {\n            console.error(err.message);\n        });\n    },\n\n    getProject: function (data, callback) {\n        fetch(url + '/projects/' + data.id, getOptions('GET', data)).then((res) => {\n            return res.json();\n        }).then(res => {\n            this.getData();\n            if (callback) { callback(res) };\n        }).catch(err => {\n            console.error(err.message);\n        });\n    },\n\n    getProjectSummary: function (data, callback) {\n        fetch(url + '/projects/' + data.id + '/summary', getOptions('GET', data)).then((res) => {\n            return res.json();\n        }).then(res => {\n            this.getData();\n            if (callback) { callback(res) };\n        }).catch(err => {\n            console.error(err.message);\n        });\n    },\n\n    addProject: function (data, callback) {\n        fetch(url + '/projects', getOptions('POST', data)).then((res) => {\n            return res.json();\n        }).then(res => {\n            this.getData();\n            if (callback) { callback(res) };\n        }).catch(err => {\n            console.error(err.message);\n        });\n    },\n\n    editProject: function (data, callback) {\n        fetch(url + '/projects/' + data.id, getOptions('PUT', data)).then((res) => {\n            return res.json();\n        }).then(res => {\n            this.getData();\n            if (callback) { callback(res) };\n        }).catch(err => {\n            console.error(err.message);\n            if (callback) callback(false);\n        });\n    },\n\n    removeProject: function (data, callback) {\n        fetch(url + '/projects/' + data.id, getOptions('DELETE', data)).then(res => {\n            return res.json()\n        }).then(res => {\n            this.getData();\n            if (callback) { callback(res) };\n        }).catch(err => {\n            console.error(err.message);\n        });\n    },\n\n    // TASKS\n    getTasks: function (callback) {\n        fetch(url + '/tasks', getOptions('GET')).then((res) => {\n            return res.json();\n        }).then(res => {\n            this.getData();\n            if (callback) { callback(res) };\n        }).catch(err => {\n            console.error(err.message);\n        });\n    },\n\n    getTask: function (data, callback) {\n        fetch(url + '/tasks/' + data.id, getOptions('GET', data)).then((res) => {\n            return res.json();\n        }).then(res => {\n            this.getData();\n            if (callback) { callback(res) };\n        }).catch(err => {\n            console.error(err.message);\n        });\n    },\n\n    getTaskSummary: function (data, callback) {\n        fetch(url + '/tasks/' + data.id + '/summary', getOptions('GET', data)).then((res) => {\n            return res.json();\n        }).then(res => {\n            this.getData();\n            if (callback) { callback(res) };\n        }).catch(err => {\n            console.error(err.message);\n        });\n    },\n\n    addTask: function (data, callback) {\n        fetch(url + '/tasks', getOptions('POST', data)).then((res) => {\n            return res.json();\n        }).then(res => {\n            this.getData();\n            if (callback) { callback(res) };\n        }).catch(err => {\n            console.error(err.message);\n        });\n    },\n\n    editTask: function (data, callback) {\n        fetch(url + '/tasks/' + data.id, getOptions('PUT', data)).then((res) => {\n            return res.json();\n        }).then(res => {\n            this.getData();\n            if (callback) { callback(res) };\n        }).catch(err => {\n            console.error(err.message);\n        });\n    },\n\n    removeTask: function (data, callback) {\n        fetch(url + '/tasks/' + data.id, getOptions('DELETE', data)).then(res => {\n            return res.json()\n        }).then(res => {\n            this.getData();\n            if (callback) { callback(res) };\n        }).catch(err => {\n            console.error(err.message);\n        });\n    },\n\n    startCounting: function (data, callback) {\n        fetch(url + '/tasks/' + data.id + '/start', getOptions('GET')).then(res => {\n            return res.json();\n        }).then(res => {\n            if (callback) { callback(res) };\n        }).catch(err => {\n            console.error(err.message);\n        });\n    },\n\n    stopCounting: function (data, callback) {\n        fetch(url + '/tasks/' + data.id + '/stop', getOptions('GET')).then(res => {\n            return res.json();\n        }).then(res => {\n            this.getData();\n            if (callback) { callback(res) };\n        }).catch(err => {\n            console.error(err.message);\n        });\n    },\n\n    // NOTIFICATIONS\n    shareTask: function (task, email, callback) {\n        fetch(url + '/tasks/' + task.id + '/summary', getOptions('POST', email)).then(res => {\n            return res.json();\n        }).then(res => {\n            if (callback) { callback(res) };\n        }).catch(err => {\n            console.error(err.message);\n        });\n    },\n\n    shareProject: function (project, email, callback) {\n        fetch(url + '/projects/' + project.id + '/summary', getOptions('POST', email)).then(res => {\n            return res.json();\n        }).then(res => {\n            if (callback) { callback(res) };\n        }).catch(err => {\n            console.error(err.message);\n        });\n    },\n};\n","function addZero(time) {\n    if (time < 10 && time > 0) {\n        time = '0' + time;\n    }\n    return ''+time;\n}\n\nexport const TimeConverter = {\n    createDate: function (year, month, day){\n        return year + '-' + addZero(month) + '-' + addZero(day);\n    },\n\n    getTodaysDate: function () {\n        const d = new Date();\n        return d.getFullYear() + '-' + addZero(d.getMonth() + 1) + '-' + addZero(d.getDate()) + ' ' + addZero(d.getHours()) + ':' + addZero(d.getMinutes()) + ':' + addZero(d.getSeconds());\n    },\n\n    getTodaysDateWithoutTime: function (date) {\n        const d = !date ? new Date() : new Date(date);\n        return d.getFullYear() + '-' + addZero(d.getMonth() + 1) + '-' + addZero(d.getDate());\n    },\n\n    getCurrentTime: function () {\n        const d = new Date();\n        return d.getTime();\n    },\n\n    getTimeDifferenceInSeconds: function (time) {\n        if (time) {\n            const d = new Date();\n            return Math.ceil((d.getTime() - time) / 1000);\n        }\n        return 0;\n    },\n\n    getSecondsPart: function (time) {\n        if (time) {\n            return addZero(Math.floor(time % 3600 % 60));\n        }\n        else {\n            return 0\n        }\n    },\n\n    getMinutesPart: function (time) {\n        if (time) {\n            return addZero(Math.floor(time % 3600 / 60));\n        }\n        else {\n            return 0\n        }\n    },\n\n    getHoursPart: function (time) {\n        if (time) {\n            return addZero(Math.floor(time / 3600));\n        }\n        else {\n            return 0\n        }\n    },\n\n    getDatePart: function (dateAndtime) {\n        if(dateAndtime){\n            return dateAndtime.split(' ')[0];\n        }\n        else {\n            return '-';\n        }\n    },\n\n    getYearPart: function (date) {\n        date = this.getTodaysDateWithoutTime(date);\n        if (date) {\n            return Number(date.split('-')[0]);\n        }\n        else {\n            return 0;\n        }\n    },\n\n    getMonthPart: function (date) {\n        date = this.getTodaysDateWithoutTime(date);\n        if (date) {\n            return Number(date.split('-')[1]);\n        }\n        else {\n            return 0;\n        }\n    },\n\n    getDayPart: function (date) {\n        date = this.getTodaysDateWithoutTime(date);\n        if (date) {\n            return Number(date.split('-')[2]);\n        }\n        else {\n            return 0;\n        }\n    },\n\n    getMoneyEarned: function (time, price) {\n        if (time && price) {\n            return Math.ceil(time / 3600 * price);\n        }\n        else {\n            return 0;\n        }\n    },\n\n    isBetweenDates: function (date, from, to){\n        date = new Date(this.getDatePart(date));\n        from = new Date(this.getDatePart(from));\n        to = new Date(this.getDatePart(to));\n        return date >= from && date <= to;\n    }\n};\n","import { Service } from './Service';\nimport { TimeConverter } from './TimeConverter';\n\nexport const DataManager = {\n    logout: function () {\n        this.removeData();\n        Service.logout();\n    },\n\n    getData: function () {\n        // Service.getData();\n        const data = localStorage.tracks;\n        return data ? JSON.parse(data) : null;\n    },\n\n    setData: function (data) {\n        if (data && !data.message) {\n            localStorage.setItem('tracks', JSON.stringify(data));\n        } else if (data.message) {\n            console.error(data.message);\n        }\n    },\n\n    removeData: function () {\n        localStorage.removeItem('tracks');\n    },\n\n    removeUser: function (data) {\n        this.removeData();\n        if (data) {\n            Service.deleteUser(data);\n        }\n    },\n\n    getUserDetails: function () {\n        let data = this.getData();\n        if (data) {\n            delete data.projects;\n            return data;\n        }\n    },\n\n    setUserDetails: function (data) {\n        Service.editUser(data);\n        data.projects = this.getProjects();\n        this.setData(data);\n    },\n\n    getEarningsAndTimeSpentForProject(project, date) {\n        var earned = 0;\n        var timeSpent = 0;\n        for (let i = 0; i < project.tasks.length; ++i) {\n            if (date) {\n                for (let j = 0; j < project.tasks[i].working.length; ++j) {\n                    if (TimeConverter.isBetweenDates(project.tasks[i].working[j].start, date.from, date.to)) {\n                        earned += TimeConverter.getMoneyEarned(project.tasks[i].working[j].timeSpent, project.tasks[i].pricePerHour);\n                        timeSpent += project.tasks[i].working[j].timeSpent;\n                    }\n                }\n            } else {\n                earned += TimeConverter.getMoneyEarned(project.tasks[i].timeSpent, project.tasks[i].pricePerHour);\n                timeSpent += project.tasks[i].timeSpent;\n            }\n        }\n        return { earned, timeSpent };\n    },\n\n    getDailyOverview: function (date) {\n        let projects = this.getProjects();\n        date = date ? date : { from: TimeConverter.getTodaysDateWithoutTime(), to: TimeConverter.getTodaysDateWithoutTime() };\n        if (projects) {\n            const result = {\n                tasks: [],\n                projects: [],\n                timeSpent: 0,\n                earned: 0\n            };\n            for (var i = 0; i < projects.length; ++i) {\n                for (var j = 0; j < projects[i].tasks.length; ++j) {\n                    var addedTask = false;\n                    for (let k = 0; k < projects[i].tasks[j].working.length && !addedTask; ++k) {\n                        if (!addedTask && TimeConverter.isBetweenDates(projects[i].tasks[j].working[k].start, date.from, date.to)) {\n                            addedTask = true;\n                            result.tasks.push(projects[i].tasks[j]);\n                        }\n                    }\n                }\n                if (addedTask) {\n                    var dailyForProject = this.getEarningsAndTimeSpentForProject(projects[i], date);\n                    result.earned += dailyForProject.earned;\n                    result.timeSpent += dailyForProject.timeSpent;\n                    result.projects.push(projects[i]);\n                }\n            }\n            return result;\n        }\n    },\n\n    // Projects\n    getProjects: function () {\n        const data = this.getData();\n        return data ? data.projects : null;\n    },\n\n    getProject: function (id) {\n        if (id !== null) {\n            const projects = this.getProjects();\n            if (projects) {\n                for (var i = 0; i < projects.length; ++i) {\n                    if (projects[i].id === Number(id)) {\n                        if (projects[i].earned === 0 || !projects[i].earned) {\n                            projects[i].earned = this.getEarningsAndTimeSpentForProject(projects[i]).earned;\n                        }\n                        return projects[i];\n                    }\n                }\n            }\n        }\n    },\n\n    addProject: function (project) {\n        if (project) {\n            const data = this.getData();\n            if (data) {\n                project.id = this.getMaxProjectID() + 1;\n                data.projects.push(project);\n                this.setData(data);\n                Service.addProject(project);\n            }\n        }\n    },\n\n    editProject: function (project) {\n        \n        if (project) {\n            const data = this.getData();\n            if (data) {\n                for (let i = 0; i < data.projects.length; ++i) {\n                    if (data.projects[i].id === Number(project.id)) {\n                        data.projects[i] = project;\n                    }\n                }\n                this.setData(data);\n                Service.editProject(project);\n            }\n        }\n    },\n\n    removeProject: function (project) {\n        \n        if (project) {\n            const data = this.getData();\n            if (data) {\n                for (let i = 0; i < data.projects.length; ++i) {\n                    if (data.projects[i].id === Number(project.id)) {\n                        data.projects.splice(i, 1);\n                    }\n                }\n                this.setData(data);\n                Service.removeProject(project);\n            }\n        }\n    },\n\n    getMaxProjectID: function () {\n        let maxId = 0;\n        const data = this.getData();\n        if (data) {\n            for (let i = 0; i < data.projects.length; ++i) {\n                let id = data.projects[i].id;\n                maxId = maxId < id ? id : maxId;\n            }\n            return maxId;\n        }\n    },\n\n    getProjectName: function (id) {\n        \n        const projects = this.getProjects();\n        for (let i = 0; i < projects.length; ++i) {\n            if (projects[i].id === id) {\n                return projects[i].name;\n            }\n        }\n    },\n\n    shareProject: function (project, email) {\n        Service.shareProject(project, email);\n    },\n\n    // Tasks\n    getTasks: function () {\n        \n        const projects = this.getProjects();\n        if (projects) {\n            const tasks = [];\n            projects.map(project => project.tasks.map(task => tasks.push(task)));\n            return tasks;\n        }\n    },\n\n    getTask: function (id) {\n        if (id !== null && id !== undefined) {\n            const projects = this.getProjects();\n            if (projects) {\n                for (var i = 0; i < projects.length; ++i) {\n                    for (var j = 0; j < projects[i].tasks.length; ++j) {\n                        if (projects[i].tasks[j] && projects[i].tasks[j].id === Number(id)) {\n                            return projects[i].tasks[j];\n                        }\n                    }\n                }\n            }\n        }\n    },\n\n    addTask: function (task) {\n        if (task) {\n            task.id = this.getMaxTasksID() + 1;\n            const data = this.getData();\n            if (data) {\n                for (let i = 0; i < data.projects.length; ++i) {\n                    if (data.projects[i].id === Number(task.projectId)) {\n                        data.projects[i].tasks.push(task);\n                    }\n                }\n                this.setData(data);\n                Service.addTask(task);\n            }\n        }\n    },\n\n    startWorking: function (log) {\n        Service.startCounting(log);\n    },\n\n    addWorkingLog: function (log) {\n        \n        if (log.id !== null && log.id !== undefined) {\n            Service.stopCounting(log);\n            const data = this.getData();\n            if (data) {\n                for (let i = 0; i < data.projects.length; ++i) {\n                    for (let j = 0; j < data.projects[i].tasks.length; ++j) {\n                        if (data.projects[i].tasks[j].id === Number(log.id)) {\n                            const earned = TimeConverter.getMoneyEarned(log.timeSpent, data.projects[i].tasks[j].pricePerHour);\n                            data.projects[i].timeSpent += log.timeSpent;\n                            data.projects[i].tasks[j].earned +=TimeConverter.getMoneyEarned(log.timeSpent, data.projects[i].tasks[j].pricePerHour);\n                            data.projects[i].earned += earned;\n                            data.projects[i].tasks[j].timeSpent += log.timeSpent;\n                            data.projects[i].tasks[j].working.push({ \"start\": log.start, \"timeSpent\": log.timeSpent });\n                        }\n                    }\n                }\n                this.setData(data);\n            }\n        }\n    },\n\n    saveTmpWorkingLog: function (id, time) {\n        if (id !==null && id !== undefined && time) {\n            const timeToSave = TimeConverter.getCurrentTime() + time;\n            localStorage.setItem(id, timeToSave);\n            return true;\n        }\n    },\n\n    getTmpWorkingLog: function (id) {\n        let timeDifference = TimeConverter.getTimeDifferenceInSeconds(localStorage.getItem(id));\n        timeDifference = timeDifference ? timeDifference : 0;\n        localStorage.removeItem(id);\n        return timeDifference;\n    },\n\n    editTask: function (task) {\n        \n        if (task) {\n            const data = this.getData();\n            if (data) {\n                for (let i = 0; i < data.projects.length; ++i) {\n                    if (data.projects[i].id === task.projectId) {\n                        for (let j = 0; j < data.projects[i].tasks.length; ++j) {\n                            if (data.projects[i].tasks[j].id === Number(task.id)) {\n                                data.projects[i].tasks[j] = task;\n                            }\n                        }\n                    }\n                }\n                this.setData(data);\n                Service.editTask(task);\n            }\n        }\n    },\n\n    removeTask: function (task) {\n        \n        if (task) {\n            const data = this.getData();\n            if (data) {\n                for (let i = 0; i < data.projects.length; ++i) {\n                    if (data.projects[i].id === Number(task.projectId)) {\n                        for (let j = 0; j < data.projects[i].tasks.length; ++j) {\n                            if (data.projects[i].tasks[j].id === Number(task.id) || !data.projects[i].tasks[j]) {\n                                data.projects[i].timeSpent -= data.projects[i].tasks[j].timeSpent;\n                                data.projects[i].earned -= data.projects[i].tasks[j].earned;\n                                data.projects[i].tasks.splice(j, 1);\n                            }\n                        }\n                    }\n                }\n                this.setData(data);\n                Service.removeTask(task);\n            }\n        }\n    },\n\n    getMaxTasksID: function () {\n        let maxId = 0;\n        const data = this.getData();\n        if (data) {\n            for (let i = 0; i < data.projects.length; ++i) {\n                for (let j = 0; j < data.projects[i].tasks.length; ++j) {\n                    let id = data.projects[i].tasks[j].id;\n                    maxId = maxId < id ? id : maxId;\n                }\n            }\n            return maxId;\n        }\n    },\n\n    shareTask: function (task, email) {\n        Service.shareTask(task, email);\n    }\n\n\n}","import React, { Component } from 'react'\n\nexport default class FormButton extends Component {\n    validateFields(needValidation) {\n        if (needValidation) {\n            let valid = true;\n            Object.entries(needValidation).forEach(([key, val]) => {\n                valid = valid && val;\n            });\n            return valid;\n        } else{\n            return true;\n        }\n    }\n\n    render() {\n        const valid = this.validateFields(this.props.needValidation);\n        const buttonProps = {\n            \"className\": \"button\" + (valid ? '' : ' buttonDisabled'),\n            \"disabled\": !!!valid\n        }\n        return (\n            <button type=\"submit\" {...buttonProps}>{this.props.name}</button>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport FormButton from '../../common/FormButton';\n\nexport default class LoginForm extends Component {\n  constructor(props, onSubmit) {\n    super(props, onSubmit);\n    this.state = {\n      email: '',\n      password: ''\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n    this.props.onChange();\n  }\n\n  render() {\n    return (\n      <form className=\"entryForm\" onSubmit={(e) => { e.preventDefault(); this.props.onSubmit(this.state);  }}>\n        <div className=\"form-row\">\n          <div className=\"form-group col\">\n            <input className=\"inputField\" name=\"email\" field=\"email\" type=\"email\" placeholder=\"Email\" onChange={e => { this.onChange(e) }} required />\n          </div>\n        </div>\n        <div className=\"form-row\">\n          <div className=\"form-group col\">\n            <input className=\"inputField\" name=\"password\" field=\"password\" type=\"password\" placeholder=\"Password\" onChange={e => { this.onChange(e) }} required />\n          </div>\n        </div>\n\n        <div className=\"form-row\">\n        <div className=\"form-group col\">\n          <FormButton needValidation={this.state} name=\"login\"/>\n        </div>\n      </div>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { DataManager } from '../../utils/DataManager';\nimport { RoutePaths } from '../../constants/RoutePaths';\nimport LoginForm from '../../components/Entry/Login/LoginForm';\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: '',\n      isLoading: false,\n    }\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.displayError = this.displayError.bind(this);\n  }\n\n  displayError(){\n    this.setState({error: 'Wrong email or password. Try again.'});\n  }\n\n  onSubmit(credentials) {\n    this.props.login(credentials, this.displayError);\n  }\n\n  onChange(){\n    if(this.state.error){\n      this.setState({error: ''});\n    }\n  }\n\n  componentWillMount(){\n    const data = DataManager.getData();\n    if(data){\n      this.setState({\n        shouldRedirect: true\n      });\n    }\n  }\n\n  render() {\n    const shouldRedirect = this.state.shouldRedirect;\n    \n    return shouldRedirect ? <Redirect to={RoutePaths.OVERVIEW}/> :\n    (\n      <div id=\"login\" className=\"container-fluid\">\n\n        {this.state.error && <div className=\"row justify-content-center text-center\"><div className=\"alert alert-danger alert-dismissible\">\n          Ups. {this.state.error}</div></div>}\n\n        <div className=\"row justify-content-center\">\n          <div className=\"col text-center\">\n            <LoginForm onSubmit={this.onSubmit} onChange={this.onChange}/>\n            <Link className=\"link\" to={RoutePaths.REMINDER}>forgotten password?</Link>\n          </div>\n        </div>\n\n        <div className=\"row justify-content-center my-5\">\n          <div className=\"col text-center\">\n            <hr />\n            or <Link className=\"link\" to={RoutePaths.REGISTER}>register</Link>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport FormButton from '../../common/FormButton';\n\nexport default class RegisterForm extends Component {\n  constructor(props, onSubmit) {\n    super(props, onSubmit);\n    this.state = {\n      name: '',\n      surname: '',\n      phone: '',\n      email: '',\n      defaultPricePerHour: 0,\n      password: '',\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  validateCredentials(credentials) {\n    return credentials.name && credentials.surname && credentials.email && credentials.password;\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    return (\n      <form className=\"entryForm\" onSubmit={(e) => { e.preventDefault(); this.props.onSubmit(this.state); }}>\n\n        <div className=\"form-row\">\n          <div className=\"form-group col\">\n            <input className=\"inputField\" name=\"name\" field=\"name\" type=\"text\" placeholder=\"Name\" onChange={this.onChange} required />\n          </div>\n        </div>\n\n        <div className=\"form-row\">\n          <div className=\"form-group col\">\n            <input className=\"inputField\" name=\"surname\" field=\"surname\" type=\"surname\" placeholder=\"Surname\" onChange={this.onChange} required />\n          </div>\n        </div>\n\n        <div className=\"form-row\">\n          <div className=\"form-group col\">\n            <input className=\"inputField\" name=\"phone\" field=\"phone\" type=\"phone\" placeholder=\"Phone\" onChange={this.onChange} />\n          </div>\n        </div>\n\n        <div className=\"form-row\">\n          <div className=\"form-group col\">\n            <input className=\"inputField\" name=\"email\" field=\"email\" type=\"email\" placeholder=\"Email\" onChange={this.onChange} required />\n          </div>\n        </div>\n\n        <div className=\"form-row\">\n          <div className=\"form-group col\">\n            <input className=\"inputField\" name=\"password\" field=\"password\" type=\"password\" placeholder=\"Password\" onChange={this.onChange} required />\n          </div>\n        </div>\n\n        <div className=\"form-row\">\n          <div className=\"form-group col\">\n            <input className=\"inputField\" name=\"defaultPricePerHour\" field=\"defaultPricePerHour\" type=\"number\" placeholder=\"$ per hour\" onChange={this.onChange}/>\n          </div>\n        </div>\n\n        <div className=\"form-row\">\n          <div className=\"form-group col\">\n            <FormButton needValidation={({name: this.state.name, surname: this.state.surname, email: this.state.email, password: this.state.password })} name=\"update\" />\n          </div>\n        </div>\n\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { DataManager } from '../../utils/DataManager';\nimport { RoutePaths } from '../../constants/RoutePaths';\nimport { Service } from '../../utils/Service';\nimport RegisterForm from '../../components/Entry/Register/RegisterForm';\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: '',\n      success: '',\n      isLoading: false,\n    }\n\n  }\n\n  register = (registred) => {\n    if (registred) {\n      this.setState({ success: 'Successfully registred. We have sent you an email. Please confirm your registration.'});\n    }\n    else {\n      this.setState({ error: 'There was a problem with registration. Please try again.' });\n    }\n  }\n\n  onSubmit = (credentials) => {\n    Service.register(credentials, this.register);\n  }\n\n  componentWillMount(){\n    const data = DataManager.getData();\n    if(data){\n      this.setState({\n        shouldRedirect: true\n      });\n    }\n  }\n\n  render() {\n    const shouldRedirect = this.state.shouldRedirect;\n    \n    return shouldRedirect ? <Redirect to={RoutePaths.OVERVIEW}/> :\n    (\n      <div id=\"register\" className=\"container-fluid\">\n\n        {this.state.error && <div className=\"row justify-content-center text-center\"><div className=\"alert alert-danger alert-dismissible\">\n          <Link to=\"#\" className=\"close\" data-dismiss=\"alert\" aria-label=\"close\">&times;</Link>\n          Ups. {this.state.error}</div></div>}\n\n        <div className=\"row justify-content-center my-3\">\n          <div className=\"col\">\n            {this.state.success ? <div className=\"row justify-content-center text-center\"><div className=\"alert alert-success alert-dismissible\">\n              <Link to=\"#\" className=\"close\" data-dismiss=\"alert\" aria-label=\"close\">&times;</Link>\n              {this.state.success}</div></div> : <RegisterForm onSubmit={this.onSubmit}/>}\n          </div>\n        </div>\n\n        <div className=\"row justify-content-center my-3\">\n          <div className=\"col text-center\">\n            <hr />\n            or <Link className=\"link\" to={RoutePaths.LOGIN}>login</Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport FormButton from '../../common/FormButton';\n\nexport default class ReminderForm extends Component {\n  constructor(props, onSubmit) {\n    super(props, onSubmit);\n    this.state = {\n      email: '',\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n\n    return (\n      <form className=\"entryForm\" onSubmit={(e) => {e.preventDefault(); this.props.onSubmit(this.state)}}>\n\n        <div className=\"form-row\">\n          <div className=\"form-group col\">\n            <input className=\"inputField\" name=\"email\" field=\"email\" type=\"email\" placeholder=\"Email\" onChange={e => { this.onChange(e) }} required />\n          </div>\n        </div>\n\n        <div className=\"form-row\">\n        <div className=\"form-group col\">\n          <FormButton needValidation={this.state} name=\"remind\"/>\n        </div>\n      </div>\n\n\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { DataManager } from '../../utils/DataManager';\nimport { RoutePaths } from '../../constants/RoutePaths';\nimport ReminderForm from '../../components/Entry/Reminder/ReminderForm';\nimport { Service } from '../../utils/Service';\n\nexport default class Reminder extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: '',\n      success: '',\n      isLoading: false,\n    }\n\n    this.remind = this.remind.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  remind(reminded) {\n    if (reminded) {\n      this.setState({ success: 'Successfully reminded :) Check your email.'})\n    }\n    else {\n      this.setState({ error: 'Wrong email or an error occured. Please try again.' });\n    }\n  }\n\n  onSubmit(credentials) {\n    Service.remind(credentials, this.remind);\n  }\n\n  componentWillMount(){\n    const data = DataManager.getData();\n    if(data){\n      this.setState({\n        shouldRedirect: true\n      });\n    }\n  }\n\n  render() {\n    const shouldRedirect = this.state.shouldRedirect;\n    \n    return shouldRedirect ? <Redirect to={RoutePaths.OVERVIEW}/> :\n    (\n      <div id=\"reminder\" className=\"container-fluid\">\n\n        {this.state.error && <div className=\"row justify-content-center text-center\"><div className=\"alert alert-danger alert-dismissible\">\n          <Link to=\"#\" className=\"close\" data-dismiss=\"alert\" aria-label=\"close\">&times;</Link>\n          Ups. {this.state.error}</div></div>}\n\n        <div className=\"row justify-content-center\">\n          <div className=\"col\">\n            <ReminderForm onSubmit={this.onSubmit}/>\n          </div>\n        </div>\n\n        <div className=\"row justify-content-center my-5\">\n          <div className=\"col text-center\">\n            <hr />\n            <Link className=\"link\" to={RoutePaths.REGISTER}>register</Link> / <Link className=\"link\" to={RoutePaths.LOGIN}>login</Link>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport logo from '../../static/images/logo.svg';\nimport { Route } from 'react-router-dom';\nimport { RoutePaths } from '../../constants/RoutePaths';\nimport Login from './Login';\nimport Register from './Register';\nimport Reminder from './Reminder';\n\nexport default class Entry extends Component {\n  render() {\n    return (\n      <div id=\"entryScreen\" className=\"container\">\n        <div className=\"topSpacerToMiddle\"></div>\n        <div className=\"row justify-content-center my-5\">\n          <div className=\"col text-center\">\n            <img className=\"entryLogo\" src={logo} alt=\"Tracks\"></img>\n          </div>\n        </div>\n        <Route exact={true} path={RoutePaths.LOGIN} component={() => <Login {...this.props} />} />\n        <Route exact={true} path={RoutePaths.REGISTER} component={() => <Register {...this.props} />} />\n        <Route exact={true} path={RoutePaths.REMINDER} component={() => <Reminder {...this.props} />} />\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport { RoutePaths } from '../../constants/RoutePaths';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faTachometerAlt, faClipboardList, faTasks} from '@fortawesome/free-solid-svg-icons';\nimport {Link} from 'react-router-dom';\n\nexport default class FooterNav extends Component {\n  render() {\n    return (\n      <nav className=\"navbar px-5\">\n        <Link to={RoutePaths.OVERVIEW} ><button className={'buttonNav ' + (this.props.active === 'overview' ? 'buttonNavActive' : '')} type=\"button\"><FontAwesomeIcon icon={faTachometerAlt} /></button></Link>\n        <Link to={RoutePaths.PROJECTS}><button className={'buttonNav ' + (this.props.active === 'projects' ? 'buttonNavActive' : '')} type=\"button\"><FontAwesomeIcon icon={faClipboardList} /></button></Link>\n        <Link to={RoutePaths.TASKS}><button className={'buttonNav ' + (this.props.active === 'tasks' ? 'buttonNavActive' : '')} type=\"button\"><FontAwesomeIcon icon={faTasks} /></button></Link>\n      </nav>\n    );\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <div className=\"row justify-content-center\">\n        <div className=\"col text-center\">\n          <h6 id=\"copyrights\">\n            <small>Created by ©Track$ 2018</small>\n          </h6>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, {Component} from 'react';\nimport logo from '../../static/images/logo.svg';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faShareSquare as share, faCogs as settings, faSlidersH as edit, faTrashAlt as remove, faPlus as add, faSignOutAlt as logout, faCalendarAlt as calendar, faChevronLeft as back} from '@fortawesome/free-solid-svg-icons';\nimport {Link} from 'react-router-dom';\n\nexport default class Header extends Component {\n  createListElement(name) {\n    const icons = {\n      'settings': settings,\n      'edit': edit,\n      'remove': remove,\n      'add': add,\n      'logout': logout,\n      'calendar': calendar,\n      'share': share,\n      'back': back,\n    };\n\n    const functions = {\n      'settings': this.props.settings,\n      'edit': this.props.edit,\n      'remove': this.props.remove,\n      'add': this.props.add,\n      'logout': this.props.logout,\n      'calendar': this.props.calendar,\n      'share': this.props.share,\n      'back': this.props.goBack,\n    }\n\n    return (<li key={name} className=\"list-inline-item px-1\"><button className=\"headerButton\" onClick={functions[name]}><FontAwesomeIcon icon={icons[name]} /></button></li>);\n  }\n\n  render() {\n    return (\n      <div id=\"header\" className=\"container-fluid\">\n        <div className=\"row justify-content-center\">\n          <ul className=\"headerButtonsList col list-inline justify-content-start text-left m-0\">\n            {this.props.elementsLeft.map(item => this.createListElement(item))}\n          </ul>\n          <div className=\"col text-center\"><Link to=\"/dashboard/overview\"><img id=\"headerLogo\" className=\"img-fluid\" src={logo} alt=\"Tracks\"></img></Link></div>\n          <ul className=\"headerButtonsList col justify-content-end text-right list-inline\">\n            {this.props.elementsRight.map(item => this.createListElement(item))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport { TimeConverter } from '../../../utils/TimeConverter';\nimport FormButton from '../../common/FormButton';\n\nexport default class Calendar extends Component {\n    constructor(props, dateRange, onSubmit) {\n        super(props, dateRange, onSubmit);\n        const from = TimeConverter.getDatePart(this.props.dateRange.from);\n        const to = TimeConverter.getDatePart(this.props.dateRange.to);\n        this.state = {\n            from: {\n                day: TimeConverter.getDayPart(from),\n                month: TimeConverter.getMonthPart(from),\n                year: TimeConverter.getYearPart(from),\n            },\n            to: {\n                day: TimeConverter.getDayPart(to),\n                month: TimeConverter.getMonthPart(to),\n                year: TimeConverter.getYearPart(to),\n            }\n        }\n    }\n\n    _getDaysInMonth(month, year) {\n        return new Date(year, month, 0).getDate() || 31;\n    }\n\n    onChange = (e, rangeType) => {\n        const currentState = this.state[rangeType];\n        this.setState({[rangeType]:{ ...currentState, [e.target.name]: e.target.value }});\n    }\n\n    _maxDayFrom = () => {\n        if(this.state.to.year === this.state.from.year && this.state.to.month === this.state.from.month){\n            return this.state.to.day;\n        } else {\n            return this._getDaysInMonth(this.state.from.month, this.state.from.year) || 31;\n        }\n    }\n\n    _maxMonthFrom(){\n        if(this.state.to.year === this.state.from.year){\n            return this.state.to.month;\n        } else {\n            return 12;\n        }\n    }\n\n    _maxYearFrom(){\n        return this.state.to.year || 2030;\n    }\n\n    _minDayTo(){\n        if(this.state.to.year === this.state.from.year && this.state.to.month === this.state.from.month){\n            return this.state.to.day;\n        } else {\n            return 1;\n        }\n    }\n\n    _minMonthTo(){\n        if(this.state.to.year === this.state.from.year){\n            return this.state.to.month;\n        } else {\n            return 1;\n        }\n    }\n\n    _minYearTo(){\n        return this.state.from.year || 2018;\n    }\n\n    _mapStateToDate = () => {\n        return {\n            from: TimeConverter.createDate(this.state.from.year, this.state.from.month, this.state.from.day),\n            to: TimeConverter.createDate(this.state.to.year, this.state.to.month, this.state.to.day)\n        }\n    }\n\n    render() {\n        return (\n            <div id=\"modalWrapper\" className='noBlur'>\n                <div id=\"modal\">\n                    <div className=\"row justify-content-end mb-3\"><div className=\"col text-right link\" onClick={this.props.close}>X</div></div>\n                    <form id=\"calendar\" className=\"text-center\" onSubmit={e => { e.preventDefault(); this.props.onSubmit(this._mapStateToDate()) }}>\n                        <div className=\"form-row my-3\">\n                            <div className=\"form-group col\">\n                                <h6 className=\"formFieldTitle\"><strong>From:</strong></h6>\n                            </div>\n                            <div className=\"form-group col\">\n                                <h6 className=\"formFieldTitle\"> Year </h6>\n                                <input className=\"inputField\" name=\"year\" type=\"number\" placeholder=\"Year\" min=\"2018\" max={this._maxYearFrom()} defaultValue={this.state.from.year} onChange={e => { this.onChange(e, 'from') }} required pattern=\"[2018-2020]\" />\n                            </div>\n\n                            <div className=\"form-group col\">\n                                <h6 className=\"formFieldTitle\"> Month </h6>\n                                <input className=\"inputField\" name=\"month\" type=\"number\" placeholder=\"Month\" min=\"1\" max={this._maxMonthFrom()} defaultValue={this.state.from.month} onChange={e => { this.onChange(e, 'from') }} required pattern=\"[1-12]\" />\n                            </div>\n\n                            <div className=\"form-group col\">\n                                <h6 className=\"formFieldTitle\"> Day </h6>\n                                <input className=\"inputField\" name=\"day\" type=\"number\" placeholder=\"Day\" min=\"1\" max={this._maxDayFrom()} defaultValue={this.state.from.day} onChange={e => { this.onChange(e, 'from') }} required pattern=\"[1-31]\" />\n                            </div>\n                        </div>\n\n                        <div className=\"form-row my-3\">\n                            <div className=\"form-group col\">\n                                <h6 className=\"formFieldTitle\"><strong>To:</strong></h6>\n                            </div>\n                            <div className=\"form-group col\">\n                                <h6 className=\"formFieldTitle\"> Year </h6>\n                                <input className=\"inputField\" name=\"year\" type=\"number\" placeholder=\"Year\" min={this._minYearTo()} max=\"2030\" defaultValue={this.state.to.year} onChange={e => { this.onChange(e, 'to') }} required pattern=\"[2018-2020]\" />\n                            </div>\n\n                            <div className=\"form-group col\">\n                                <h6 className=\"formFieldTitle\"> Month </h6>\n                                <input className=\"inputField\" name=\"month\" type=\"number\" placeholder=\"Month\" min={this._minMonthTo()} max=\"12\" defaultValue={this.state.to.month} onChange={e => { this.onChange(e, 'to') }} required pattern=\"[1-12]\" />\n                            </div>\n\n                            <div className=\"form-group col\">\n                                <h6 className=\"formFieldTitle\"> Day </h6>\n                                <input className=\"inputField\" name=\"day\" type=\"number\" placeholder=\"Day\" min={this._minDayTo()} max={this._getDaysInMonth(this.state.to.month, this.state.to.year)} defaultValue={this.state.to.day} onChange={e => { this.onChange(e, 'to') }} required pattern=\"[1-31]\" />\n                            </div>\n                        </div>\n\n                        <div className=\"form-row my-5\">\n                            <div className=\"form-group col\">\n                                <FormButton needValidation={({ ...this.state.from, ...this.state.to})} name=\"update date range\" />\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport FormButton from '../../common/FormButton';\n\nexport default class Settings extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: this.props.data.id,\n            name: this.props.data.name,\n            surname: this.props.data.surname,\n            phone: this.props.data.phone,\n            email: '',\n            defaultPricePerHour: this.props.data.defaultPricePerHour,\n        };\n    }\n\n    onChange = (e) => {\n        this.setState({[e.target.name]: e.target.value});\n    }\n    \n    render() {\n        return (\n            <div id=\"modalWrapper\" className='noBlur my-5 py-5'>\n                <div id=\"modal\">\n                    <div className=\"row justify-content-end mb-3\"><div className=\"col text-right link\" onClick={this.props.close}>X</div></div>\n                    <form id=\"settings\" className=\"text-center\" onSubmit={e => { e.preventDefault(); this.props.onSubmit(this.state); }}>\n                        <div className=\"form-row\">\n                            <div className=\"form-group col text-left\">\n                            <h6 className='title'>Name</h6>\n                                <input className=\"inputField\" name=\"name\" field=\"name\" type=\"text\" placeholder=\"Name\" defaultValue={this.state.name} onChange={this.onChange} />\n                            </div>\n                        </div>\n\n                        <div className=\"form-row\">\n                            <div className=\"form-group col text-left\">\n                            <h6 className='title'>Surname</h6>\n                                <input className=\"inputField\" name=\"surname\" field=\"surname\" type=\"surname\" placeholder=\"Surname\" defaultValue={this.state.surname} onChange={this.onChange} />\n                            </div>\n                        </div>\n\n                        <div className=\"form-row\">\n                            <div className=\"form-group col text-left\">\n                            <h6 className='title'>Phone</h6>\n                                <input className=\"inputField\" name=\"phone\" field=\"phone\" type=\"phone\" placeholder=\"Phone\" defaultValue={this.state.phone} onChange={this.onChange} />\n                            </div>\n                        </div>\n\n                        <div className=\"form-row\">\n                            <div className=\"form-group col text-left\">\n                            <h6 className='title'>Email</h6>\n                                <input className=\"inputField\" name=\"email\" field=\"email\" type=\"email\" placeholder={this.props.data.email} defaultValue={this.props.data.email} onChange={this.onChange} />\n                            </div>\n                        </div>\n\n                        <div className=\"form-row\">\n                            <div className=\"form-group col text-left\">\n                            <h6 className='title'>Price per hour</h6>\n                                <input className=\"inputField\" name=\"defaultPricePerHour\" field=\"defaultPricePerHour\" type=\"number\" placeholder=\"$ per hour\" defaultValue={this.state.defaultPricePerHour} onChange={this.onChange} />\n                            </div>\n                        </div>\n\n                        <div className=\"form-row\">\n                            <div className=\"form-group col text-left\">\n                                <FormButton name=\"update\" />\n                            </div>\n                        </div>\n\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react'\nimport { TimeConverter } from '../../../utils/TimeConverter';\n\nexport default class OverviewDetails extends Component {\n    render() {\n        return (\n            <div className=\"row justify-content-between mt-2 mb-5 pb-5\">\n                <div className=\"col-2 text-left borderRight\">\n                    <h6 className=\"title\"><strong>Earned:</strong></h6>\n                    <h6 className=\"title\">{this.props.earned || 0}$</h6>\n                </div>\n                <div className=\"col-8 text-center\">\n                    <h2 className=\"title\">Overview</h2>\n                </div>\n                <div className=\"col-2 text-right borderLeft\">\n                    <h6 className=\"title\"><strong>Worked:</strong></h6>\n                    <h6 className=\"title\">{TimeConverter.getHoursPart(this.props.timeSpent)}h {TimeConverter.getMinutesPart(this.props.timeSpent)}m</h6>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { TimeConverter } from '../../../utils/TimeConverter';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSlidersH as edit, faTrashAlt as remove } from '@fortawesome/free-solid-svg-icons';\n\n\nexport default class ProjectTile extends Component {\n  render() {\n    const project = this.props.project;\n    return (\n      <div className=\"col\">\n        <button className={\"tileWrapper projectTile \" + (project.state === 'closed' ? 'closedTile ' : '')}>\n          <div className=\"row justify-content-between mb-4\" onClick={() => this.props.show(project.id)}>\n            {/* Name */}\n            <div className=\"col-6 text-left\">\n              <h3 className=\"inline tileTitle\">{project.name}</h3>\n            </div>\n            {/* Hours */}\n            <div className=\"col-6 text-right\">\n              <h5 className=\"inline\">{TimeConverter.getHoursPart(project.timeSpent)}h {TimeConverter.getMinutesPart(project.timeSpent)}min </h5>\n            </div>\n          </div>\n          <div className=\"row justify-content-start mt-4\">\n            {/* Money */}\n            <div className=\"col-7 text-left\" onClick={() => this.props.show(project.id)}>\n              <h5 id=\"moneyEarned\">{(project.earned || 0) + '$'} </h5>\n            </div>\n\n            {/* Buttons */}\n            <div className=\"col-5\">\n              <ul className=\"headerLinksList list-inline justify-content-end text-right p-0 m-0 tileSmallButtons\">\n                <li className=\"list-inline-item px-1\"><h6 className=\"tileLink\" onClick={() => this.props.edit(project.id)}><FontAwesomeIcon icon={edit} /></h6></li>\n                <li className=\"list-inline-item px-1\"><h6 className=\"tileLink\" onClick={() => this.props.remove(project)}><FontAwesomeIcon icon={remove} /></h6></li>\n              </ul>\n            </div>\n          </div>\n        </button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { TimeConverter } from '../../../utils/TimeConverter';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSlidersH as edit, faTrashAlt as remove } from '@fortawesome/free-solid-svg-icons';\n\n\nexport default class TaskTile extends Component {\n  render() {\n    const task = this.props.task;\n    return (\n      <div className=\"col\">\n        <button className={\"tileWrapper taskTile \" + (task.isActive ? 'activeTile' : '') + (task.state === 'closed' ? 'closedTile ' : '')}>\n            <div onClick={() => this.props.show(task.id)} className=\"row justify-content-between mb-4\" >\n              {/* Name */}\n              <div className=\"col-6 text-left\">\n                <h3 className=\"inline tileTitle\">{task.name}</h3>\n              </div>\n              {/* Hours */}\n              <div className=\"col-6 text-right\">\n                <h5 className=\"inline\">{TimeConverter.getHoursPart(task.timeSpent)}h {TimeConverter.getMinutesPart(task.timeSpent)}min </h5>\n              </div>\n            </div>\n          <div className=\"row justify-content-start mt-4\">\n            {/* Money */}\n              <div onClick={() => this.props.show(task.id)} className=\"col-7 text-left\" >\n                <h5 id=\"moneyEarned\">{(task.earned || 0) + '$'} </h5>\n              </div>\n\n            {/* Buttons */}\n            <div className=\"col-5\">\n              <ul className=\"headerLinksList list-inline justify-content-end text-right p-0 m-0 tileSmallButtons\">\n                {this.props.edit ? <li className=\"list-inline-item px-1\"><h6 className=\"tileLink\" onClick={() => this.props.edit(task.id)}><FontAwesomeIcon icon={edit} /></h6></li> : '' }\n                {this.props.remove ? <li className=\"list-inline-item px-1\"><h6 className=\"tileLink\" onClick={() => this.props.remove(task)}><FontAwesomeIcon icon={remove} /></h6></li> : '' }\n              </ul>\n            </div>\n          </div>\n        </button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { DataManager } from '../../../utils/DataManager';\nimport { RoutePaths } from '../../../constants/RoutePaths';\nimport { TimeConverter } from '../../../utils/TimeConverter';\nimport Header from '../../../components/Dashboard/Header';\nimport Calendar from '../../../components/Dashboard/Overview/Calendar';\nimport Settings from '../../../components/Dashboard/Overview/Settings';\nimport OverviewDetails from '../../../components/Dashboard/Overview/OverviewDetails';\nimport ProjectTile from '../../../components/Dashboard/Projects/ProjectTile';\nimport TaskTile from '../../../components/Dashboard/Tasks/TaskTile';\n\nexport default class Overview extends Component {\n  constructor(props) {\n    super(props);\n    const daily = DataManager.getDailyOverview();\n    this.state = {\n      daily: daily,\n      dateRange: {from: TimeConverter.getTodaysDateWithoutTime(), to: TimeConverter.getTodaysDateWithoutTime()},\n      modalCalendarOpened: false,\n      modalSettingsOpened: false,\n    };\n  }\n\n  toggleModal = (modalType) => {\n    switch (modalType) {\n      case 'calendar':\n        this.setState(prevState => ({ modalCalendarOpened: !prevState.modalCalendarOpened }));\n        break;\n\n      case 'settings':\n        this.setState(prevState => ({ modalSettingsOpened: !prevState.modalSettingsOpened }));\n        break;\n      \n      default:\n        break;\n    }\n  }\n\n  updateOverview = () => {\n    const daily = DataManager.getDailyOverview(this.state.dateRange);\n    this.setState({\n      daily: daily\n    })\n  }\n\n  onSettingsClick = () => {\n    this.toggleModal('settings');\n  }\n\n  onSettingsSubmit = (settings) => {\n    this.toggleModal('settings');\n    DataManager.setUserDetails(settings);\n  }\n\n  onCalendarClick = () => {\n    this.toggleModal('calendar');\n  }\n\n  onCalendarSubmit = (newDateRange) => {\n    const daily = DataManager.getDailyOverview(newDateRange);\n    this.setState({\n      dateRange: newDateRange,\n      daily: daily\n    })\n    this.toggleModal('calendar');\n  }\n\n  onTaskTileClick = (id) => {\n    this.props.history.push(RoutePaths.TASK.replace(':id', id));\n  }\n\n  onProjectTileClick = (id) => {\n    this.props.history.push(RoutePaths.PROJECT.replace(':id', id));\n  }\n\n  componentWillMount(){\n    this.setState({\n      shouldRedirect: !!!DataManager.getData()\n    });\n  }\n\n  render() {\n    const shouldRedirect = this.state.shouldRedirect;\n    \n    return shouldRedirect ? <Redirect to={RoutePaths.LOGIN}/> :\n    (\n      <div id=\"overview\" className=\"container-fluid my-5 py-5\">\n        <div className={this.state.modalCalendarOpened || this.state.modalSettingsOpened ? 'blur' : ''}>\n          <Header elementsLeft={['calendar']} elementsRight={['settings', 'logout']} calendar={this.onCalendarClick} logout={this.props.logout} settings={this.onSettingsClick} />\n          <OverviewDetails earned={this.state.daily.earned} timeSpent={this.state.daily.timeSpent} />\n          <hr/>\n          <div className='row justify-content-center'>\n            <div className=\"col-12 text-left\"><h4 className='title'><small>Daily Projects</small></h4></div>\n            <ul>\n              {this.state.daily.projects.map(project => project ? <li key={project.id} className=\"list-inline-item\"><ProjectTile key={project.id} project={project} show={this.onProjectTileClick}/></li> : null)}\n            </ul>\n          </div>\n          <hr />\n          <div className='row justify-content-center'>\n            <div className=\"col-12 text-left\"><h4 className='title'><small>Daily Tasks</small></h4></div>\n            <ul>\n              {this.state.daily.tasks.map(task => task ? <li key={task.id} className=\"list-inline-item\"><TaskTile key={task.id} task={task} show={this.onTaskTileClick}/></li> : null)}\n            </ul>\n          </div>\n        </div>\n\n        {this.state.modalCalendarOpened && <Calendar close={this.onCalendarClick} dateRange={this.state.dateRange} onSubmit={this.onCalendarSubmit} />}\n        {this.state.modalSettingsOpened && <Settings close={this.onSettingsClick} data={DataManager.getUserDetails()} onSubmit={this.onSettingsSubmit} />}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { RoutePaths } from '../../../constants/RoutePaths';\nimport Header from '../../../components/Dashboard/Header';\nimport ProjectTile from '../../../components/Dashboard/Projects/ProjectTile';\nimport { DataManager } from '../../../utils/DataManager';\nexport default class Projects extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { projects: DataManager.getProjects() }\n    this.onTileClick = this.onTileClick.bind(this);\n    this.onEditClick = this.onEditClick.bind(this);\n    this.onRemoveClick = this.onRemoveClick.bind(this);\n    this.onAddClick = this.onAddClick.bind(this);\n  }\n\n  onTileClick(id) {\n    this.props.history.push(RoutePaths.PROJECT.replace(':id', id));\n  }\n\n  onEditClick(id) {\n    this.props.history.push(RoutePaths.PROJECT_EDIT.replace(':id', id));\n  }\n\n  onRemoveClick(project) {\n    DataManager.removeProject(project);\n    this.setState({ projects: DataManager.getProjects() });\n  }\n\n  onAddClick() {\n    this.props.history.push(RoutePaths.PROJECT_ADD);\n  }\n\n  componentWillMount(){\n    this.setState({\n      shouldRedirect: !!!DataManager.getData()\n    });\n  }\n  \n  render() {\n    const projects = this.state.projects;\n\n    const shouldRedirect = this.state.shouldRedirect;\n    \n    return shouldRedirect ? <Redirect to={RoutePaths.LOGIN}/> :\n    (\n      <div id=\"projects\" className=\"container-fluid my-5 py-5\">\n        <Header elementsLeft={[]} elementsRight={['add']} add={this.onAddClick} />\n        <div className=\"row justify-content-center\">\n          <div className=\"col-12 text-center\">\n            <h2 className=\"title\">Projects</h2>\n          </div>\n        </div>\n        <div className=\"row jutify-content-center text-center\">\n          {projects.map(project => project ? <ProjectTile key={project.id} project={project} show={this.onTileClick} edit={this.onEditClick} remove={this.onRemoveClick} /> : null)}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { TimeConverter } from '../../../utils/TimeConverter';\n\nexport default class ProjectDetails extends Component {\n\n  render() {\n    const project = this.props.project;\n\n    return (\n      <div id=\"projectDetails\" className=\"row justify-content-center text-center mx-auto\">\n      <div className=\"col-8 justify-content-center borderBottomOrange\">\n        <h2 className=\"orangeColor\"><strong>{project.name}</strong></h2>\n        <h5 className=\"orangeColor\"><strong>For: </strong>{project.for}</h5>\n        <h6 className=\"orangeColor\"><strong>Worked: </strong>{TimeConverter.getHoursPart(project.timeSpent)}h {TimeConverter.getMinutesPart(project.timeSpent)}m</h6>\n        <h6 className=\"orangeColor\"><strong>Earned: </strong>{project.earned}$</h6>\n      </div>\n    </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport FormButton from './FormButton';\n\nexport default class Share extends Component {\n    onChange = (e) => {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    render() {\n        return (\n            <div id=\"modalWrapper\" className='noBlur'>\n                <div id=\"modal\">\n                    <div className=\"row justify-content-end mb-3\"><div className=\"col text-right link\" onClick={this.props.close}>X</div></div>\n                    <form id=\"calendar\" className=\"text-center\" onSubmit={e => { e.preventDefault(); this.props.onSubmit(this.state) }}>\n                        <div className=\"form-row my-3\">\n                            <div className=\"form-group col\">\n                                <h6 className=\"formFieldTitle\"><strong>Share to:</strong></h6>\n                                <input className=\"inputField\" name=\"email\" field=\"email\" type=\"email\" placeholder=\"Email\" onChange={this.onChange} required />\n                            </div>\n                        </div>\n\n                        <div className=\"form-row my-5\">\n                            <div className=\"form-group col\">\n                                <FormButton needValidation={({ ...this.state })} name=\"share\" />\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n","import { TimeConverter } from '../utils/TimeConverter';\nimport { DataManager } from '../utils/DataManager';\n\nexport const InitialProject = {\n    get() {\n        const userDetails = DataManager.getUserDetails();\n        if (userDetails) {\n            return {\n                'deadline': TimeConverter.getTodaysDateWithoutTime(),\n                'createdAt': TimeConverter.getTodaysDateWithoutTime(),\n                'updatedAt': TimeConverter.getTodaysDateWithoutTime(),\n                'id': -1,\n                'name': '',\n                'description': '',\n                'for': '',\n                'pricePerHour': userDetails.defaultPricePerHour,\n                'timeSpent': 0,\n                'tasks': [],\n            }\n        }\n    }\n}","import React, {Component} from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { matchPath } from 'react-router-dom';\nimport { RoutePaths } from '../../../constants/RoutePaths';\nimport { DataManager } from '../../../utils/DataManager';\nimport Header from '../../../components/Dashboard/Header';\nimport ProjectDetails from '../../../components/Dashboard/Projects/ProjectDetails';\nimport TaskTile from '../../../components/Dashboard/Tasks/TaskTile';\nimport Share from '../../../components/common/Share';\nimport {InitialProject} from '../../../constants/Project';\nexport default class Project extends Component {\n  edit = () => {\n    this.props.history.push(RoutePaths.PROJECT_EDIT.replace(':id', this.state.project.id));\n  }\n\n  remove = () => {\n    DataManager.removeProject(this.state.project);\n    this.goBack();\n  }\n\n  goBack = () => {\n    this.props.history.goBack();\n  }\n\n  share = (email) => {\n    DataManager.shareProject(this.state.project, email);\n    this.toggleShare();\n  }\n\n  getProject = () => {\n    const match = this.props.location ? matchPath(this.props.location.pathname, {\n      path: RoutePaths.PROJECT,\n      exact: true,\n      strict: false\n    }) : null;\n\n    return match ? DataManager.getProject(match.params.id) : match;\n  }\n\n  onTileClick = (id) => {\n    this.props.history.push(RoutePaths.TASK.replace(':id', id));\n  }\n\n  onEditClick = (id) => {\n    this.props.history.push(RoutePaths.TASK_EDIT.replace(':id', id));\n  }\n\n  onRemoveClick = (task) => {\n    DataManager.removeTask(task);\n    this.setState({ tasks: DataManager.getTasks() });\n  }\n\n  toggleShare = () => {\n    this.setState({isShareModalOpen: !!!this.state.isShareModalOpen});\n  }\n\n  componentWillMount(){\n    const _shouldRedirect = !!!DataManager.getData();\n    this.setState({\n      shouldRedirect: _shouldRedirect\n    });\n\n    if(!_shouldRedirect){\n      this.setState({project: this.getProject()});\n    }\n    \n  }\n  \n  render() {\n    const project = this.state.project || InitialProject.get();\n    const shouldRedirect = this.state.shouldRedirect;\n    return shouldRedirect ? <Redirect to={RoutePaths.LOGIN}/> :\n    (\n      <div id=\"project\" className=\"container-fluid mt-5 pt-5\">\n        <Header elementsLeft={['back']} elementsRight={['share', 'edit', 'remove']} share={this.toggleShare} goBack={this.goBack} edit={this.edit} remove={this.remove}/>\n        <ProjectDetails project={project} onTileClick={this.onTileClick}/>\n        <div className=\"row text-center mt-5\">\n          {project.tasks.map(task => task ? <TaskTile key={task.id} task={task} show={this.onTileClick} edit={this.onEditClick} remove={this.onRemoveClick} /> : null)}\n        </div>\n        {this.state.isShareModalOpen && <Share onSubmit={this.share} close={this.toggleShare}/>}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class DatePicker extends Component {\n    _getDaysInMonth(month, year) {\n        return new Date(year, month, 0).getDate() || 31;\n    }\n\n    render() {\n        const date = new Date();\n        const currentYear = date.getFullYear();\n        const currentMonth = date.getMonth();\n        const currentDay = date.getDate();\n        return (\n            <div className=\"datePicker row\">\n                <div className=\"col\">\n                    <h6 className=\"formFieldTitle\"> Year </h6>\n                    <input className=\"inputField\" name=\"year\" type=\"number\" placeholder=\"Year\" min={currentYear} max=\"2030\" defaultValue={this.props.year || currentYear} onChange={e => { this.props.onChange(e) }} required pattern=\"[2018-2020]\" />\n                </div>\n\n                <div className=\"col\">\n                    <h6 className=\"formFieldTitle\"> Month </h6>\n                    <input className=\"inputField\" name=\"month\" type=\"number\" placeholder=\"Month\" min=\"1\" max=\"12\" defaultValue={this.props.month || currentMonth} onChange={e => { this.props.onChange(e) }} required pattern=\"[1-12]\" />\n                </div>\n\n                <div className=\"col\">\n                    <h6 className=\"formFieldTitle\"> Day </h6>\n                    <input className=\"inputField\" name=\"day\" type=\"number\" placeholder=\"Day\" min={1} max={this._getDaysInMonth(this.props.month, this.props.year)} defaultValue={this.props.day || currentDay} onChange={e => { this.props.onChange(e) }} required pattern=\"[1-31]\" />\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport FormButton from '../../common/FormButton';\nimport DatePicker from '../../common/DatePicker';\nimport { TimeConverter } from '../../../utils/TimeConverter';\n\nexport default class AddProjectForm extends Component {\n  constructor(props, project, onSubmit) {\n    super(props, project, onSubmit);\n    this.state = { ...this.props.project };\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  _onDateChange = (e) => {\n    if (e.target.value) {\n      const deadline = this.state.deadline;\n      var newDeadline = {\n        day: TimeConverter.getDayPart(deadline),\n        month: TimeConverter.getMonthPart(deadline),\n        year: TimeConverter.getYearPart(deadline)\n      }\n      newDeadline[e.target.name] = e.target.value;\n      this.setState({ deadline: TimeConverter.createDate(newDeadline.year, newDeadline.month, newDeadline.day) });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"row justify-content-center mt-5 pt-5 mb-5 pb-5\">\n        <div className=\"col-6\">\n          <form id=\"addProjectForm\" className=\"text-center\" onSubmit={e => { e.preventDefault(); this.props.onSubmit(this.state) }}>\n            <div className=\"entryScreenSpacer\"></div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group col text-center\">\n                <h1 className=\"formTitle\">Add Project</h1>\n              </div>\n            </div>\n\n            <div className=\"form-row p-1\">\n              <div className=\"form-group col text-left\">\n                <h6 className='title'>Name *</h6>\n                <input className=\"inputField\" name=\"name\" type=\"text\" placeholder=\"Name\" onChange={e => { this.onChange(e) }} required />\n              </div>\n            </div>\n\n            <div className=\"form-row p-1\">\n              <div className=\"form-group col text-left\">\n                <h6 className='title'>Deadline *</h6>\n                <DatePicker onChange={this._onDateChange} day={TimeConverter.getDayPart(this.state.deadline)} month={TimeConverter.getMonthPart(this.state.deadline)} year={TimeConverter.getYearPart(this.state.deadline)} />\n              </div>\n            </div>\n\n            <div className=\"form-row p-1\">\n              <div className=\"form-group col text-left\">\n                <h6 className='title'>Description *</h6>\n                <input className=\"inputField\" name=\"description\" type=\"text\" placeholder=\"Description\" onChange={e => { this.onChange(e) }} required/>\n              </div>\n            </div>\n\n            <div className=\"form-row p-1\">\n              <div className=\"form-group col text-left\">\n                <h6 className='title'>For *</h6>\n                <input className=\"inputField\" name=\"for\" type=\"text\" placeholder=\"For\" onChange={e => { this.onChange(e) }} required/>\n              </div>\n            </div>\n\n            <div className=\"form-row p-1\">\n              <div className=\"form-group col text-left\">\n                <h6 className='title'>Price per hour ($)</h6>\n                <input className=\"inputField\" name=\"pricePerHour\" type=\"number\" placeholder=\"$ per hour\" onChange={e => { this.onChange(e) }} defaultValue={this.state.pricePerHour} />\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group col\">\n                <FormButton needValidation={({ name: this.state.name, deadline: this.state.deadline, for: this.state.for, description: this.state.description })} name=\"add\" />\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { DataManager } from '../../../utils/DataManager';\nimport Header from '../../../components/Dashboard/Header';\nimport AddProjectForm from '../../../components/Dashboard/Projects/AddProjectForm';\nimport { InitialProject } from '../../../constants/Project';\nimport { RoutePaths } from '../../../constants/RoutePaths';\nexport default class AddProject extends Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.goBack = this.goBack.bind(this);\n  }\n\n  onSubmit(data) {\n    DataManager.addProject(data);\n    this.goBack();\n  }\n\n  goBack() {\n    this.props.history.goBack();\n  }\n\n  componentWillMount(){\n    this.setState({\n      shouldRedirect: !!!DataManager.getData()\n    });\n  }\n\n  render() {\n    const shouldRedirect = this.state.shouldRedirect;\n    \n    return shouldRedirect ? <Redirect to={RoutePaths.LOGIN}/> :\n    (\n      <div id=\"addProject\" className=\"container\">\n        <Header elementsLeft={['back']} elementsRight={[]} goBack={this.goBack} />\n        <AddProjectForm project={InitialProject.get()} onSubmit={this.onSubmit} />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport FormButton from '../../common/FormButton';\nimport DatePicker from '../../common/DatePicker';\nimport { TimeConverter } from '../../../utils/TimeConverter';\n\nexport default class AddProjectForm extends Component {\n  constructor(props, project, onSubmit) {\n    super(props, project, onSubmit);\n    this.state = { ...this.props.project };\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  _onDateChange = (e) => {\n    if (e.target.value) {\n      const deadline = this.state.deadline;\n      var newDeadline = {\n        day: TimeConverter.getDayPart(deadline),\n        month: TimeConverter.getMonthPart(deadline),\n        year: TimeConverter.getYearPart(deadline)\n      }\n      newDeadline[e.target.name] = e.target.value;\n      this.setState({ deadline: TimeConverter.createDate(newDeadline.year, newDeadline.month, newDeadline.day) });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"row justify-content-center mt-5 pt-5 mb-5 pb-5\">\n        <div className=\"col-6\">\n          <form id=\"editProjectForm\" className=\"text-center\" onSubmit={e => { e.preventDefault(); this.props.onSubmit(this.state) }}>\n            <div className=\"entryScreenSpacer\"></div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group col text-center\">\n                <h1 className=\"formTitle\">Edit Project</h1>\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group col text-left\">\n                <h6 className='title'>Name *</h6>\n                <input className=\"inputField\" name=\"name\" type=\"text\" placeholder=\"Name\" value={this.state.name} onChange={e => { this.onChange(e) }} required />\n              </div>\n            </div>\n\n            <div className=\"form-row p-1\">\n              <div className=\"form-group col text-left\">\n                <h6 className='title'>Deadline *</h6>\n                <DatePicker onChange={this._onDateChange} day={this.state.day} month={this.state.month} year={this.state.day} />\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group col text-left\">\n                <h6 className='title'>Description *</h6>\n                <input className=\"inputField\" name=\"description\" type=\"text\" placeholder=\"Description\" value={this.state.description} onChange={e => { this.onChange(e) }} />\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group col text-left\">\n                <h6 className='title'>For</h6>\n                <input className=\"inputField\" name=\"for\" type=\"text\" placeholder=\"For\" value={this.state.for} onChange={e => { this.onChange(e) }} />\n              </div>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group col text-left\">\n                <h6 className='title'>Price per hour ($)</h6>\n                <input className=\"inputField\" name=\"pricePerHour\" type=\"number\" placeholder=\"$ per hour\" value={this.state.priceperHour} onChange={e => { this.onChange(e) }}/>\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group col\">\n                <FormButton needValidation={({ name: this.state.name, deadline: this.state.deadline, description: this.state.description })} name=\"edit\" />\n              </div>\n            </div>\n          </form>\n        </div></div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { matchPath } from 'react-router-dom';\nimport { RoutePaths } from '../../../constants/RoutePaths';\nimport { DataManager } from '../../../utils/DataManager';\nimport Header from '../../../components/Dashboard/Header';\nimport EditProjectForm from '../../../components/Dashboard/Projects/EditProjectForm';\n\nexport default class EditProject extends Component {\n  constructor(props){\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.goBack = this.goBack.bind(this);\n  }\n\n  onSubmit(data){\n    DataManager.editProject(data);\n    this.goBack();\n  }\n\n  getProject() {\n    const match = this.props.location ? matchPath(this.props.location.pathname, {\n      path: RoutePaths.PROJECT_EDIT,\n      exact: true,\n      strict: false\n    }) : null;\n\n    return match ? DataManager.getProject(match.params.id) : match;\n  }\n\n  goBack(){\n    this.props.history.goBack();\n  }\n\n  componentWillMount(){\n    this.setState({\n      shouldRedirect: !!!DataManager.getData()\n    });\n  }\n  \n  render() {\n    const project = this.getProject();\n    const shouldRedirect = this.state.shouldRedirect;\n    \n    return shouldRedirect ? <Redirect to={RoutePaths.LOGIN}/> :\n    (\n      <div id=\"editProject\" className=\"container\">\n        <Header elementsLeft={['back']} elementsRight={[]} goBack={this.goBack}/>\n        <EditProjectForm project={project} projects={DataManager.getProjects()} onSubmit={this.onSubmit}/>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { RoutePaths } from '../../../constants/RoutePaths';\nimport Header from '../../../components/Dashboard/Header';\nimport TaskTile from '../../../components/Dashboard/Tasks/TaskTile';\nimport { DataManager } from '../../../utils/DataManager';\n\nexport default class Tasks extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { tasks: DataManager.getTasks() }\n    this.onTileClick = this.onTileClick.bind(this);\n    this.onEditClick = this.onEditClick.bind(this);\n    this.onRemoveClick = this.onRemoveClick.bind(this);\n    this.onAddClick = this.onAddClick.bind(this);\n  }\n\n  onTileClick(id) {\n    this.props.history.push(RoutePaths.TASK.replace(':id', id));\n  }\n\n  onEditClick(id) {\n    this.props.history.push(RoutePaths.TASK_EDIT.replace(':id', id));\n  }\n\n  onRemoveClick(task) {\n    DataManager.removeTask(task);\n    this.setState({ tasks: DataManager.getTasks() });\n  }\n\n  onAddClick() {\n    this.props.history.push(RoutePaths.TASK_ADD);\n  }\n\n  componentWillMount(){\n    this.setState({\n      shouldRedirect: !!!DataManager.getData()\n    });\n  }\n\n  render() {\n    const tasks = this.state.tasks;\n\n    const shouldRedirect = this.state.shouldRedirect;\n    \n    return shouldRedirect ? <Redirect to={RoutePaths.LOGIN}/> :\n    (\n      <div id=\"tasks\" className=\"container-fluid my-5 py-5\">\n        <Header elementsLeft={[]} elementsRight={['add']} add={this.onAddClick} />\n        <div className=\"row justify-content-center\">\n          <div className=\"col-12 text-center\">\n            <h2 className=\"title\">Tasks</h2>\n          </div>\n        </div>\n        <div className=\"row jutify-content-center text-center\">\n          {tasks.map(task => task ? <TaskTile key={task.id} task={task} show={this.onTileClick} edit={this.onEditClick} remove={this.onRemoveClick} /> : null)}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class TaskDetails extends Component {\n  render() {\n    return (\n      <div id=\"taskDetails\" className=\"row justify-content-center text-center mx-auto\">\n        <div className=\"col-8 justify-content-center borderBottom\">\n          <h2 className=\"title\"><strong>{this.props.task.name}</strong></h2>\n          <h5 className=\"title\"><strong>Project:</strong> {this.props.projectName} </h5>\n          <h6 className=\"title\"><strong>For: </strong>{this.props.task.for}</h6>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class TimingButton extends Component {\n    render() {\n        const buttonProps = {\n            \"className\": \"buttonTiminig font-weight-bold\" + (this.props.running ? ' buttonWorking' : ''),\n        }\n        return (\n            <button onClick={this.props.onClick} {...buttonProps}>{this.props.running ? 'Stop Working' : 'Start Working'}</button>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { TimeConverter } from '../../../utils/TimeConverter';\nimport { DataManager } from '../../../utils/DataManager';\nimport TimingButton from '../../../components/common/TimingButton';\n\nexport default class TaskTiming extends Component {\n  constructor(props) {\n    super(props);\n    const timeDiff = DataManager.getTmpWorkingLog(this.props.task.id);\n    this.state = {\n      timeSpent: this.props.task.timeSpent + timeDiff,\n      time: timeDiff,\n      running: timeDiff ? true : false\n    }\n    this.timer = 0;\n    this.startTimer = this.startTimer.bind(this);\n    this.countUp = this.countUp.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n    this._onClick = this._onClick.bind(this);\n  }\n\n  startTimer() {\n    this.setState({\n      running: true\n    });\n    this.timer = setInterval(this.countUp, 1000);\n  }\n\n  stopTimer() {\n    clearInterval(this.timer);\n    this.setState({\n      running: false\n    });\n  }\n\n  countUp() {\n    this.setState({\n      time: this.state.time + 1,\n      timeSpent: this.state.timeSpent + 1\n    });\n  }\n\n  _onClick() {\n    if (this.state.running === false) {\n      this.props.startWorking(this.props.task.id);\n      this.startTimer();\n      DataManager.editTask({...this.props.task, isActive: true });\n    }\n    else if(this.state.running === true){\n      this.stopTimer();\n      this.props.addWorkingLog({\"id\": this.props.task.id, \"start\": TimeConverter.getTodaysDate(), \"timeSpent\": this.state.time});\n      DataManager.editTask({...this.props.task, isActive: false });\n    }\n  }\n\n  componentWillUnmount(){\n    if(this.state.running === true){\n      DataManager.saveTmpWorkingLog(this.props.task.id, this.state.time);\n    }\n  }\n\n  componentDidMount(){\n    if(this.state.running === true){\n      this.startTimer();\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"taskTiming\">\n        <div className=\"row justify-content-center text-center my-5\">\n          <div className=\"col-4 borderRight\">\n            <h5 className='title'><strong>Time Spent:</strong> {TimeConverter.getHoursPart(this.state.timeSpent)}h {TimeConverter.getMinutesPart(this.state.timeSpent)}min {TimeConverter.getSecondsPart(this.state.timeSpent)}s</h5>\n            <h6 className='title'><strong>Earned: </strong> {TimeConverter.getMoneyEarned(this.state.timeSpent, this.props.task.pricePerHour)}$ </h6>\n          </div>\n          <div className=\"col-4\"><TimingButton onClick={this._onClick} running={this.state.running}/></div>\n        </div>\n\n        <div className=\"row justify-content-center\">\n          <table className=\"col-8 table table-hover text-center title\">\n            <thead>\n              <tr>\n                <th className='w-25'>Date</th>\n                <th className='w-25'>Time</th>\n                <th className='w-25'>Earned</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.props.task.working.map(day =>\n              day.timeSpent > 0 ?\n                <tr key={day.start}>\n                  <td className='w-25'>{TimeConverter.getDatePart(day.start)}</td>\n                  <td className='w-25'>{TimeConverter.getHoursPart(day.timeSpent)}h {TimeConverter.getMinutesPart(day.timeSpent)}m {TimeConverter.getSecondsPart(day.timeSpent)}s</td>\n                  <td className='w-25'>{TimeConverter.getMoneyEarned(day.timeSpent, this.props.task.pricePerHour) + '$'}</td>\n                </tr> : null)\n              }\n            </tbody>\n          </table>\n        </div>\n      </div>\n    )\n  }\n}\n","import { TimeConverter } from '../utils/TimeConverter';\nimport { DataManager } from '../utils/DataManager';\n\nexport const InitialTask = {\n    get() {\n        const userDetails = DataManager.getUserDetails();\n        if (userDetails) {\n            return {\n                'deadline': TimeConverter.getTodaysDateWithoutTime(),\n                'createdAt': TimeConverter.getTodaysDateWithoutTime(),\n                'updatedAt': TimeConverter.getTodaysDateWithoutTime(),\n                'id': -1,\n                'projectId': null,\n                'name': '',\n                'description': '',\n                'for': '',\n                'state': '',\n                'pricePerHour': 0,\n                'timeSpent': 0,\n                'working': [],\n            }\n        }\n    }\n}","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { matchPath } from 'react-router-dom';\nimport { RoutePaths } from '../../../constants/RoutePaths';\nimport { DataManager } from '../../../utils/DataManager';\nimport Header from '../../../components/Dashboard/Header';\nimport TaskDetails from '../../../components/Dashboard/Tasks/TaskDetails';\nimport TaskTiming from '../../../components/Dashboard/Tasks/TaskTiming';\nimport Share from '../../../components/common/Share';\nimport {InitialTask} from '../../../constants/Task';\n\nexport default class Task extends Component {\n  edit = () => {\n    this.props.history.push(RoutePaths.TASK_EDIT.replace(':id', this.state.task.id));\n  }\n\n  remove = () => {\n    DataManager.removeTask(this.state.task);\n    this.goBack();\n  }\n\n  goBack = () => {\n    this.props.history.goBack();\n  }\n\n  share = (email) => {\n    DataManager.shareTask(this.state.task, email);\n    this.toggleShare();\n  }\n\n  getTask = () => {\n    const match = this.props.location ? matchPath(this.props.location.pathname, {\n      path: RoutePaths.TASK,\n      exact: true,\n      strict: false\n    }) : null;\n\n    return match ? DataManager.getTask(match.params.id) : match;\n  }\n\n  startWorking = (id) => {\n    DataManager.startWorking({id});\n  }\n\n  addWorkingLog = (log) => {\n    DataManager.addWorkingLog(log);\n    this.setState({task: DataManager.getTask(log.id)});\n  }\n\n  toggleShare = () => {\n    this.setState({isShareModalOpen: !!!this.state.isShareModalOpen});\n  }\n\n  componentWillMount(){\n    const _shouldRedirect = !!!DataManager.getData();\n    this.setState({\n      shouldRedirect: _shouldRedirect\n    });\n    if(!_shouldRedirect){\n      this.setState({task: this.getTask()});\n    }\n  }\n  \n  render() {\n    const task = this.state.task || InitialTask.get();\n    const shouldRedirect = this.state.shouldRedirect;\n    \n    return shouldRedirect ? <Redirect to={RoutePaths.LOGIN}/> :\n    (\n      <div id=\"task\" className=\"container-fluid mt-5 pt-5\">\n        <Header elementsLeft={['back']} elementsRight={['share', 'edit', 'remove']} share={this.toggleShare} goBack={this.goBack} edit={this.edit} remove={this.remove}/>\n        <TaskDetails task={task} projectName={DataManager.getProjectName(task.projectId)}/>\n        <TaskTiming {...this.props} task={task} startWorking={this.startWorking} addWorkingLog={this.addWorkingLog} />\n        {this.state.isShareModalOpen && <Share onSubmit={this.share} close={this.toggleShare}/>}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport FormButton from '../../common/FormButton';\n\nexport default class AddForm extends Component {\n  constructor(props, task, projects, onSubmit) {\n    super(props, task, projects, onSubmit);\n    this.state = { ...this.props.task };\n    this.changeHourlyPrice = this.changeHourlyPrice.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  changeHourlyPrice() {\n    for (let i = 0; i < this.props.projects.length; ++i) {\n      if (this.props.projects[i].id === Number(this.state.projectId)) {\n        this.setState({ pricePerHour: this.props.projects[i].pricePerHour });\n      }\n    }\n  }\n\n  render() {\n    const projects = this.props.projects;\n    return (\n      <div className=\"row justify-content-center mt-5 pt-5 mb-5 pb-5\">\n        <div className=\"col-6\">\n      <form id=\"addTaskForm\" className=\"text-center\" onSubmit={e => { e.preventDefault(); this.props.onSubmit(this.state) }}>\n        <div className=\"entryScreenSpacer\"></div>\n        \n        <div className=\"form-row\">\n          <div className=\"form-group col text-center\">\n            <h1 className=\"formTitle\">Add Task</h1>\n          </div>\n        </div>\n\n        <div className=\"form-row\">\n          <div className=\"form-group col text-left\">\n          <h6 className='title'>Projects *</h6>\n            <select className=\"inputField\" name=\"projectId\" onChange={e => { this.onChange(e) }} defaultValue=\"\" required >\n              <option value=\"\" disabled hidden>Choose project</option>\n    {projects.map(project => <option key={project.id} value={project.id}>{project.name}</option>)}\n            </select>\n          </div>\n        </div>\n\n        <div className=\"form-row\">\n          <div className=\"form-group col text-left\">\n          <h6 className='title'>Name *</h6>\n            <input className=\"inputField\" name=\"name\" type=\"text\" placeholder=\"Name\" onChange={e => { this.onChange(e) }} required />\n          </div>\n        </div>\n\n        <div className=\"form-row\">\n          <div className=\"form-group col text-left\">\n          <h6 className='title'>Description *</h6>\n            <input className=\"inputField\" name=\"description\" type=\"text\" placeholder=\"Description\" onChange={e => { this.onChange(e) }} />\n          </div>\n        </div>\n\n        <div className=\"form-row\">\n          <div className=\"form-group col text-left\">\n          <h6 className='title'>For</h6>\n            <input className=\"inputField\" name=\"for\" type=\"text\" placeholder=\"For\" onChange={e => { this.onChange(e) }} />\n          </div>\n        </div>\n\n        <div className=\"form-row\">\n          <div className=\"form-group col text-left\">\n          <h6 className='title'>Price per hour ($)</h6>\n            <input className=\"inputField\" name=\"pricePerHour\" type=\"number\" placeholder=\"$ per hour\" onChange={e => { this.onChange(e) }} defaultValue={this.state.pricePerHour} />\n          </div>\n        </div>\n\n        <div className=\"form-row\">\n          <div className=\"form-group col\">\n            <FormButton needValidation={({ name: this.state.name, description: this.state.description, projectId: this.state.projectId })} name=\"add\" />\n          </div>\n        </div>\n      </form>\n      </div></div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { DataManager } from '../../../utils/DataManager';\nimport Header from '../../../components/Dashboard/Header';\nimport AddTaskForm from '../../../components/Dashboard/Tasks/AddTaskForm';\nimport { InitialTask } from '../../../constants/Task';\nimport { RoutePaths } from '../../../constants/RoutePaths';\nexport default class AddTask extends Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.goBack = this.goBack.bind(this);\n  }\n\n  onSubmit(data) {\n    DataManager.addTask(data);\n    this.goBack();\n  }\n\n  goBack() {\n    this.props.history.goBack();\n  }\n\n  componentWillMount(){\n    this.setState({\n      shouldRedirect: !!!DataManager.getData()\n    });\n  }\n\n  render() {\n    const shouldRedirect = this.state.shouldRedirect;\n    \n    return shouldRedirect ? <Redirect to={RoutePaths.LOGIN}/> :\n    (\n      <div id=\"addTask\" className=\"container\">\n        <Header elementsLeft={['back']} elementsRight={[]} goBack={this.goBack} />\n        <AddTaskForm task={InitialTask.get()} projects={DataManager.getProjects()} onSubmit={this.onSubmit} />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport FormButton from '../../common/FormButton';\n\n\nexport default class EditForm extends Component {\n  constructor(props, task, projects, onSubmit) {\n    super(props, task, projects, onSubmit);\n    this.state = { ...this.props.task };\n  }\n\n  validateFields(fields) {\n    return fields.name && fields.pricePerHour && fields.projectId;\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const projects = this.props.projects;\n\n    return (\n      <div className=\"row justify-content-center mt-5 pt-5 mb-5 pb-5\">\n        <div className=\"col-6\">\n          <form className=\"text-center addTaskForm\" onSubmit={e => { e.preventDefault(); this.props.onSubmit(this.state) }}>\n            <div className=\"entryScreenSpacer\"></div>\n            <div className=\"form-row\">\n              <div className=\"form-group col text-center\">\n                <h1 className=\"formTitle\">Edit Task</h1>\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group col text-left\">\n                <h6 className='title'>Project *</h6>\n                <select className=\"inputField\" name=\"projectId\" onChange={e => { this.onChange(e) }} defaultValue={this.state.projectId} required >\n                  {projects.map(project => <option key={project.id} value={project.id}>{project.name}</option>)}\n                </select>\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group col text-left\">\n                <h6 className='title'>Name *</h6>\n                <input className=\"inputField\" name=\"name\" type=\"text\" placeholder=\"Name\" onChange={e => { this.onChange(e) }} defaultValue={this.state.name} required />\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group col text-left\">\n                <h6 className='title'>Description *</h6>\n                <input className=\"inputField\" name=\"description\" type=\"text\" placeholder=\"Description\" onChange={e => { this.onChange(e) }} defaultValue={this.state.description} required/>\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group col text-left\">\n              <h6 className='title'>For</h6>\n                <input className=\"inputField\" name=\"for\" type=\"text\" placeholder=\"For\" onChange={e => { this.onChange(e) }} defaultValue={this.state.for} />\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group col text-left\">\n                <h6 className='title'>Price per hour ($)</h6>\n                <input className=\"inputField\" name=\"pricePerHour\" type=\"number\" placeholder=\"$ per hour\" onChange={e => { this.onChange(e) }} defaultValue={this.state.pricePerHour}/>\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group col\">\n                <FormButton needValidation={({ name: this.state.name, description: this.state.description, projectId: this.state.projectId })} name=\"update\" />\n              </div>\n            </div>\n          </form>\n        </div></div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { matchPath } from 'react-router-dom';\nimport { RoutePaths } from '../../../constants/RoutePaths';\nimport { DataManager } from '../../../utils/DataManager';\nimport Header from '../../../components/Dashboard/Header';\nimport EditTaskForm from '../../../components/Dashboard/Tasks/EditTaskForm';\n\nexport default class EditTask extends Component {\n  constructor(props){\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.goBack = this.goBack.bind(this);\n  }\n\n  onSubmit(data){\n    DataManager.editTask(data);\n    this.goBack();\n  }\n\n  getTask() {\n    const match = this.props.location ? matchPath(this.props.location.pathname, {\n      path: RoutePaths.TASK_EDIT,\n      exact: true,\n      strict: false\n    }) : null;\n    return match ? DataManager.getTask(match.params.id) : match;\n  }\n\n  goBack(){\n    this.props.history.goBack();\n  }\n  \n  componentWillMount(){\n    this.setState({\n      shouldRedirect: !!!DataManager.getData()\n    });\n  }\n\n  render() {\n    const task = this.getTask();\n    const shouldRedirect = this.state.shouldRedirect;\n    \n    return shouldRedirect ? <Redirect to={RoutePaths.LOGIN}/> :\n    (\n      <div id=\"editTask\" className=\"container\">\n        <Header elementsLeft={['back']} elementsRight={[]} goBack={this.goBack}/>\n        <EditTaskForm task={task} projects={DataManager.getProjects()} onSubmit={this.onSubmit}/>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { RoutePaths } from '../../constants/RoutePaths';\nimport FooterNavigation from '../../components/Dashboard/FooterNavigation';\nimport Footer from '../../components/Dashboard/Footer';\nimport Overview from '../Dashboard/Overview/Overview';\nimport Projects from './Projects/Projects';\nimport Project from './Projects/Project';\nimport AddProject from './Projects/AddProject';\nimport EditProject from './Projects/EditProject';\nimport Tasks from './Tasks/Tasks';\nimport Task from './Tasks/Task';\nimport AddTask from './Tasks/AddTask';\nimport EditTask from './Tasks/EditTask';\nimport { DataManager } from '../../utils/DataManager';\n\nexport default class Dashboard extends Component {\n  componentWillMount(){\n    if(!!!DataManager.getData()){\n      this.props.history.push(RoutePaths.LOGIN);\n    }\n  }\n\n  render() {\n    const path = this.props.location ? this.props.location.pathname : '/';\n    const pathSplittedOnSlash = path.split('/');\n    const isInMainDashboard = path.includes('dashboard') && (pathSplittedOnSlash.length <= 3);\n    const activeTab = isInMainDashboard ? pathSplittedOnSlash[2] : '';\n\n    return (\n      <div id=\"dashboard\" className=\"container-fluid p-0\">\n        <Route exact={true} path={RoutePaths.OVERVIEW} component={() => <Overview {...this.props} />} />\n        <Route exact={true} path={RoutePaths.PROJECT} component={() => <Project {...this.props} />} />\n        <Route exact={true} path={RoutePaths.PROJECTS} component={() => <Projects {...this.props} />} />\n        <Route exact={true} path={RoutePaths.PROJECT_ADD} component={() => <AddProject {...this.props} />} />\n        <Route exact={true} path={RoutePaths.PROJECT_EDIT} component={() => <EditProject {...this.props} />} />\n        <Route exact={true} path={RoutePaths.TASK} component={() => <Task {...this.props} />} />\n        <Route exact={true} path={RoutePaths.TASKS} component={() => <Tasks {...this.props} />} />\n        <Route exact={true} path={RoutePaths.TASK_ADD} component={() => <AddTask {...this.props} />} />\n        <Route exact={true} path={RoutePaths.TASK_EDIT} component={() => <EditTask {...this.props} />} />\n        <footer id=\"footer\"> {isInMainDashboard ? <FooterNavigation active={activeTab}/> : <Footer />} </footer>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Route, withRouter } from 'react-router-dom';\nimport { RoutePaths } from './constants/RoutePaths';\nimport Entry from './containers/Entry/Entry';\nimport Dashboard from './containers/Dashboard/Dashboard';\nimport { Service } from './utils/Service';\nimport { DataManager } from './utils/DataManager';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {isLoggedIn: false, data: null};\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n\n  login(credentials, failureCallback){\n    var setStateOfLogin = (loggedIn) => {\n      if(loggedIn){\n        this.setState({data: DataManager.getData()});\n        this.setState({isLoggedIn: true});\n        this.props.history.push(RoutePaths.OVERVIEW);\n      }\n    }\n    Service.login(credentials, setStateOfLogin, failureCallback);\n  }\n\n  logout(){\n    DataManager.logout();\n    this.setState({isLoggedIn: false, data: null});\n    this.props.history.push(RoutePaths.LOGIN);\n  }\n\n  componentWillMount(){\n    const data = DataManager.getData();\n    if(!data){\n      this.props.history.push(RoutePaths.LOGIN);\n    } else{\n      this.props.history.push(RoutePaths.OVERVIEW);\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"main\">\n        <Route path={RoutePaths.ENTRY} component={() => <Entry {...this.props} login={this.login}/>} />\n        <Route path={RoutePaths.DASHBOARD} component={() => <Dashboard {...this.props} logout={this.logout}/>} />\n      </div>\n    );\n  }\n}\n\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n              'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n      .register(swUrl)\n      .then((registration) => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n                console.log(\n                    'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                );\n\n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n\n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch((error) => {\n        console.error('Error during service worker registration:', error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n      .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n        // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n        // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n            'No internet connection found. App is running in offline mode.'\n        );\n      });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\nReactDOM.render(<Router><App/></Router>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}